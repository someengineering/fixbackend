"""add metering data

Revision ID: 9b414d0c477f
Revises: e3ddf05cd115
Create Date: 2023-09-29 09:53:37.058826+00:00

"""

from typing import Sequence, Union

import fastapi_users_db_sqlalchemy
import sqlalchemy as sa
from alembic import op

from fixbackend.sqlalechemy_extensions import UTCDateTime

# revision identifiers, used by Alembic.
revision: str = "9b414d0c477f"
down_revision: Union[str, None] = "e3ddf05cd115"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "metering",
        sa.Column("id", fastapi_users_db_sqlalchemy.generics.GUID(), nullable=False),
        sa.Column("tenant_id", fastapi_users_db_sqlalchemy.generics.GUID(), nullable=False),
        sa.Column("timestamp", UTCDateTime(timezone=True), nullable=False),
        sa.Column("job_id", sa.String(length=36), nullable=False),
        sa.Column("task_id", sa.String(length=36), nullable=False),
        sa.Column("nr_of_accounts_collected", sa.INTEGER(), nullable=False),
        sa.Column("nr_of_resources_collected", sa.INTEGER(), nullable=False),
        sa.Column("nr_of_error_messages", sa.INTEGER(), nullable=False),
        sa.Column("started_at", UTCDateTime(timezone=True), nullable=False),
        sa.Column("duration", sa.INTEGER(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_metering_tenant_id"), "metering", ["tenant_id"], unique=False)
    op.create_index(op.f("ix_metering_timestamp"), "metering", ["timestamp"], unique=False)
    op.drop_index("idx_at", table_name="next_run")
    op.create_index(op.f("ix_next_run_at"), "next_run", ["at"], unique=False)
    # ### end Alembic commands ###
